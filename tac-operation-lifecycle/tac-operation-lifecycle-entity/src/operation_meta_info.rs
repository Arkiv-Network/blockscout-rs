//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.5

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "operation_meta_info")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub operation_id: String,
    pub tac_valid_executors: Option<Vec<String>>,
    pub ton_valid_executors: Option<Vec<String>>,
    pub tac_protocol_fee: Option<Decimal>,
    pub tac_executor_fee: Option<Decimal>,
    pub tac_token_fee_symbol: Option<String>,
    pub ton_protocol_fee: Option<Decimal>,
    pub ton_executor_fee: Option<Decimal>,
    pub ton_token_fee_symbol: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::operation::Entity",
        from = "Column::OperationId",
        to = "super::operation::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Operation,
}

impl Related<super::operation::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Operation.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
